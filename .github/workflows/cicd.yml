name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - "develop"
    types: [closed]
    paths:
      - 'monicar-collector/**'
      - 'monicar-control-center/**'
      - 'monicar-event-hub/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - uses: actions/checkout@v3
      - name: make collector application-prod.yml
        run: |
          cd monicar-collector/src/main/resources
          touch ./application.yml
          echo "${{ secrets.MONICAR_COLLECTOR_YML }}" > ./application.yml
          echo "${{ secrets.MONICAR_COLLECTOR_YML }}"
        shell: bash

      - name: make control-center application-prod.yml
        run: |
          cd monicar-control-center/src/main/resources
          touch ./application.yml
          echo "${{ secrets.MONICAR_CONTROL_CENTER_YML }}" > ./application.yml
          echo "${{ secrets.MONICAR_CONTROL_CENTER_YML }}"
        shell: bash

      - name: make event-hub application-prod.yml
        run: |
          cd monicar-event-hub/src/main/resources
          touch ./application.yml
          echo "${{ secrets.MONICAR_EVENT_HUB_YML }}" > ./application.yml
          echo "${{ secrets.MONICAR_EVENT_HUB_YML }}"
        shell: bash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build -x test

      - name: Build and Image Deploy to DockHub
        if: success()
        run: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      #          cd ./monicar-collector
      #          sudo docker build --platform linux/amd64 -t monicar-collector .
      #          IMAGE_TAG=suxxxxhyun/monicar-collector:latest
      #          echo "Image Tag: $IMAGE_TAG"
      #          sudo docker tag monicar-collector $IMAGE_TAG
      #          sudo docker push $IMAGE_TAG
      #
          cd ./monicar-control-center
          sudo docker build --platform linux/amd64 -t monicar-control-center .
          IMAGE_TAG=suxxxxhyun/monicar-control-center:latest
          echo "Image Tag: $IMAGE_TAG"
          sudo docker tag monicar-control-center $IMAGE_TAG
          sudo docker push $IMAGE_TAG
      #
      #          cd ../monicar-event-hub
      #          sudo docker build --platform linux/amd64 -t monicar-event-hub .
      #          IMAGE_TAG=suxxxxhyun/monicar-event-hub:latest
      #          echo "Image Tag: $IMAGE_TAG"
      #          sudo docker tag monicar-event-hub $IMAGE_TAG
      #          sudo docker push $IMAGE_TAG
      #
      #      - name: Connect to WAS & Execute Application (monicar-collector)
      #        uses: appleboy/ssh-action@v0.1.6
      #        with:
      #          host: ${{ secrets.EC2_COLLECTOR_HOST }}
      #          username: ${{ secrets.EC2_COLLECTOR_USER }}
      #          key: ${{ secrets.EC2_COLLECTOR_PRIVATE_KEY }}
      #          script: |
      #            echo "Pulling and running monicar-collector image on collector EC2..."
      #            sudo docker stop $(sudo docker ps -a -q)
      #            sudo docker rm $(sudo docker ps -a -q)
      #            sudo docker rmi -f $(sudo docker images -q)
      #            sudo docker pull suxxxxhyun/monicar-collector:latest
      #            sudo docker run -d --name monicar-collector -p 8080:8080 suxxxxhyun/monicar-collector:latest
      #
      #
      - name: Connect to WAS & Execute Application (monicar-control-center)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_CONTROL_CENTER_HOST }}
          username: ${{ secrets.EC2_CONTROL_CENTER_USER }}
          key: ${{ secrets.EC2_CONTROL_CENTER_PRIVATE_KEY }}
          script: |
            echo "Pulling and running monicar-control-center image on control-center EC2..."
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm $(sudo docker ps -a -q)
            sudo docker rmi -f $(sudo docker images -q)
            sudo docker pull suxxxxhyun/monicar-control-center:latest
            sudo docker run -d --name monicar-control-center -p 8081:8081 suxxxxhyun/monicar-control-center:latest
#
#      - name: Connect to WAS & Execute Application (monicar-event-hub)
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.EC2_EVENT_HUB_HOST }}
#          username: ${{ secrets.EC2_EVENT_HUB_USER }}
#          key: ${{ secrets.EC2_EVENT_HUB_PRIVATE_KEY }}
#          script: |
#            echo "Pulling and running monicar-event-hub image on event-hub EC2..."
#            sudo docker stop $(sudo docker ps -a -q)
#            sudo docker rm $(sudo docker ps -a -q)
#            sudo docker rmi -f $(sudo docker images -q)
#            sudo docker pull suxxxxhyun/monicar-event-hub:latest
#            sudo docker run -d --name monicar-event-hub -p 8082:8082 suxxxxhyun/monicar-event-hub:latest