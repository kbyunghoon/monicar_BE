name: Control Center production CI/CD Pipeline

on:
  pull_request_target:
    branches:
      - "main"
    types: [closed]
    paths:
      - 'monicar-control-center/**'
  workflow_dispatch:
    inputs:
      tags:
        description: ''

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: apply control-center application.yml
        run: |
          cd monicar-control-center/src/main/resources
          touch ./application.yml
          echo "${{ secrets.MONICAR_CONTROL_CENTER_PROD_YML }}" > ./application.yml
        shell: bash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew :monicar-control-center:clean :monicar-control-center:build -x test

      - name: Build and Push Docker Image
        if: success()
        run: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          cd ./monicar-control-center
          sudo docker build --platform linux/amd64 -t monicar-control-center .
          IMAGE_TAG=${{ secrets.CONTROL_CENTER_PROD_TAG }}
          sudo docker tag monicar-control-center $IMAGE_TAG
          sudo docker push $IMAGE_TAG

      - name: Connect to WAS & Deploy Application (monicar-control-center-prod)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_CONTROL_CENTER_HOST }}
          username: ${{ secrets.EC2_CONTROL_CENTER_USER }}
          key: ${{ secrets.EC2_CONTROL_CENTER_PRIVATE_KEY }}
          script: |
            echo "=== [배포 시작] Monicar Control Center ==="
            
            # ✅ 0. .env 파일 준비
            echo "서버에 .env 파일 생성..."
            mkdir -p /home/ubuntu/control-center-prod
            echo "${{ secrets.MONICAR_CONTROL_CENTER_PROD_ENV }}" > /home/ubuntu/control-center-prod/.env

            # 1️⃣ Redis 컨테이너 상태 확인
            if [ -z "$(sudo docker ps -q --filter 'name=^/redis-container-prod$')" ]; then
                if [ -n "$(sudo docker ps -aq -f status=exited --filter 'name=^/redis-container-prod$')" ]; then
                    echo "기존 Redis 컨테이너 제거 중..."
                    sudo docker rm redis-container-prod
                fi
                echo "Redis 컨테이너 실행 중이 아님 → 새로 시작합니다..."
                sudo docker run -d --name redis-container-prod -p 6379:6379 redis --requirepass ${{ secrets.REDIS_PASSWORD }}
            else
                echo "Redis 컨테이너가 이미 실행 중입니다."
            fi
            
            # Elasticsearch 컨테이너 상태 확인
            if [ ! "$(sudo docker ps -q -f name=monicar-es)" ]; then
                if [ "$(sudo docker ps -aq -f status=exited -f name=monicar-es)" ]; then
                    echo "기존 Elasticsearch 컨테이너 제거 중..."
                    sudo docker rm monicar-es
                fi
                echo "Elasticsearch 컨테이너 실행 중이 아님 → 새로 시작합니다..."
                sudo docker run -d --name monicar-es -p 9200:9200 -p 9300:9300 bhoonk/monicar-es:latest
            else
                echo "Elasticsearch 컨테이너가 이미 실행 중입니다."
            fi

            # 2️⃣ 기존 monicar-control-center-prod 컨테이너 중지 및 삭제
            echo "기존 monicar-control-center-prod 컨테이너 중지 및 삭제..."
            sudo docker stop monicar-control-center-prod || true
            sudo docker rm monicar-control-center-prod || true

            # 3️⃣ 기존 이미지 삭제
            echo "기존 monicar-control-center-prod 이미지 삭제..."
            sudo docker rmi -f ${{ secrets.CONTROL_CENTER_PROD_TAG }} || true

            # 4️⃣ 최신 이미지 Pull
            echo "최신 monicar-control-center-prod 이미지 가져오는 중..."
            sudo docker pull ${{ secrets.CONTROL_CENTER_PROD_TAG }}
            
            # 5️⃣ 새로운 컨테이너 실행 (with .env)
            echo "새로운 monicar-control-center-prod 컨테이너 실행..."
            sudo docker run -d \
              --name monicar-control-center-prod \
              --network host \
              --env-file /home/ubuntu/control-center-prod/.env \
              -p 8080:8080 \
              -v /app/logs:/var/log/app-logs \
              ${{ secrets.CONTROL_CENTER_PROD_TAG }}

            echo "=== [배포 완료] Monicar Control Center가 실행되었습니다! ==="